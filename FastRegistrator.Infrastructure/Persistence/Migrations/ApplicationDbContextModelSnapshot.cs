// <auto-generated />
using System;
using FastRegistrator.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastRegistrator.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.PersonData", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Snils")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonData");
                });

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.PrizmaCheckResult", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("PrizmaResponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RejectionReasonCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PrizmaChecks");
                });

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.StatusHistoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatusDT")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("StatusHistory");
                });

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.PersonData", b =>
                {
                    b.HasOne("FastRegistrator.ApplicationCore.Domain.Entities.Person", null)
                        .WithOne("PersonData")
                        .HasForeignKey("FastRegistrator.ApplicationCore.Domain.Entities.PersonData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FastRegistrator.ApplicationCore.Domain.ValueObjects.Passport", "Passport", b1 =>
                        {
                            b1.Property<int>("PersonDataId")
                                .HasColumnType("int");

                            b1.Property<string>("Citizenship")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("IssueDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("IssueId")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("IssuedBy")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Series")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PersonDataId");

                            b1.ToTable("PersonData");

                            b1.WithOwner()
                                .HasForeignKey("PersonDataId");
                        });

                    b.OwnsOne("FastRegistrator.ApplicationCore.Domain.ValueObjects.PersonName", "Name", b1 =>
                        {
                            b1.Property<int>("PersonDataId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PersonDataId");

                            b1.ToTable("PersonData");

                            b1.WithOwner()
                                .HasForeignKey("PersonDataId");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Passport")
                        .IsRequired();
                });

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.PrizmaCheckResult", b =>
                {
                    b.HasOne("FastRegistrator.ApplicationCore.Domain.Entities.StatusHistoryItem", null)
                        .WithOne("PrizmaCheck")
                        .HasForeignKey("FastRegistrator.ApplicationCore.Domain.Entities.PrizmaCheckResult", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.StatusHistoryItem", b =>
                {
                    b.HasOne("FastRegistrator.ApplicationCore.Domain.Entities.Person", null)
                        .WithMany("StatusHistory")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.Person", b =>
                {
                    b.Navigation("PersonData");

                    b.Navigation("StatusHistory");
                });

            modelBuilder.Entity("FastRegistrator.ApplicationCore.Domain.Entities.StatusHistoryItem", b =>
                {
                    b.Navigation("PrizmaCheck");
                });
#pragma warning restore 612, 618
        }
    }
}
